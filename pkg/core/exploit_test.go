package core

import (
	"reflect"
	"testing"
)

func TestLoadCharset(t *testing.T) {
	// Prepare tests
	tests := []struct {
		name    string
		charset string
		want    []string
		wantErr bool
	}{
		{"Regular charset", "abcde", []string{"a", "b", "c", "d", "e"}, false},
		//TODO File Mocking
	}

	// Start with tests
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			var c Core
			c.SetOption("CHARSET", tt.charset)

			e := c.loadCharset()

			gotErr := (e != nil)
			if gotErr != tt.wantErr {
				t.Errorf("compactAppData error got = %v (%v), want = %v", gotErr, e, tt.wantErr)
				return
			}

			got := c.charset
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("compactAppData got = %v, want = %v", got, tt.want)
			}
		})
	}
}
